#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 12 13>;
        };

        tab2 {
            bindings = <&kp LS(TAB)>;
            key-positions = <11 12>;
        };

        MOUS {
            bindings = <&lt 5 K_PLAY_PAUSE>;
            key-positions = <30 31>;
        };

        altenter {
            bindings = <&kp RA(ENTER)>;
            key-positions = <18 19>;
        };

        browsertab {
            bindings = <&kp LC(TAB)>;
            key-positions = <3 2>;
        };

        browsertab1 {
            bindings = <&kp LS(LC(TAB))>;
            key-positions = <2 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &lt 4 D       &kp F                        &kp G             &mkp MB3             &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp ENTER
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B             &kp EXCLAMATION      &kp QUESTION   &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 INT_HENKAN  &lt 1 LG(PERIOD)  &lt 5 ESC            &kp BACKSPACE  &lt 2 SPACE                             &kp AT_SIGN
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PG_UP>;
        };

        FUNCTION {
            bindings = <
&trans  &none   &kp F3    &kp F4        &trans                               &kp MINUS      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&trans  &none   &kp END   &kp UP_ARROW  &kp HOME   &trans      &kp SLASH     &kp PERIOD     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans      &kp EQUAL     &kp NUMBER_0   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK
&trans  &trans  &trans    &trans        &trans     &trans      &kp RS(LEFT)  &kp RS(RIGHT)                                            &kp PERCENT
            >;
        };

        NUM {
            bindings = <
&kp MINUS       &none          &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))  &kp LG(T)                                                 &kp CARET         &kp AMPERSAND      &kp TILDE             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp LC(A)       &kp LG(LS(S))  &kp KP_NUMBER_5   &kp LC(F)          &kp LG(TAB)  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH  &kp DOLLAR            &kp PERCENT
&kp LEFT_SHIFT  &none          &kp LC(C)         &kp LC(V)          &none        &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp HASH           &kp LEFT_BRACE        &kp RIGHT_BRACE       &kp BACKSLASH
&trans          &trans         &trans            &trans             &trans       &trans                       &trans          &trans                                                                           &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans    &trans                              &trans         &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans    &trans    &trans      &trans        &trans         &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &mkp MB1  &mkp MB2  &trans      &trans        &trans         &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &mkp MB3  &trans    &trans      &kp RA(LEFT)  &kp RA(RIGHT)                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
